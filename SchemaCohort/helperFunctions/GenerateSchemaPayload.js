export function generateSchemaPayload(schemaName, universeId) {
  return {
    entityName: schemaName,
    description: "Schema for openfema data",
    schemaReadAccess: "PUBLIC",
    dataReadAccess: "PUBLIC",
    dataWriteAccess: "PUBLIC",
    metadataReadAccess: "PUBLIC",
    metadataWriteAccess: "PUBLIC",
    universes: [universeId],
    tags: {
      BLUE: [schemaName],
    },
    attributes: [
      {
        name: "disasterNumber",
        nestedName: "disasterNumber",
        type: {
          type: "number",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "declarationDate",
        nestedName: "declarationDate",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "disasterName",
        nestedName: "disasterName",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "incidentBeginDate",
        nestedName: "incidentBeginDate",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "incidentEndDate",
        nestedName: "incidentEndDate",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "declarationType",
        nestedName: "declarationType",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "stateCode",
        nestedName: "stateCode",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "stateName",
        nestedName: "stateName",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "incidentType",
        nestedName: "incidentType",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "entryDate",
        nestedName: "entryDate",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "updateDate",
        nestedName: "updateDate",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "closeoutDate",
        nestedName: "closeoutDate",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "region",
        nestedName: "region",
        type: {
          type: "number",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "ihProgramDeclared",
        nestedName: "ihProgramDeclared",
        type: {
          type: "boolean",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "iaProgramDeclared",
        nestedName: "iaProgramDeclared",
        type: {
          type: "boolean",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "paProgramDeclared",
        nestedName: "paProgramDeclared",
        type: {
          type: "boolean",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "hmProgramDeclared",
        nestedName: "hmProgramDeclared",
        type: {
          type: "boolean",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "id",
        nestedName: "id",
        type: {
          type: "string",
        },
        required: true,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "hash",
        nestedName: "hash",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      {
        name: "lastRefresh",
        nestedName: "lastRefresh",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
      ,
      {
        name: "timeStamp",
        nestedName: "timeStamp",
        type: {
          type: "string",
        },
        required: false,
        reference: false,
        childAttributes: [],
        access: "PUBLIC",
      },
    ],
    primaryKey: ["id", "timeStamp"],
    execute: "PUBLIC",
    visibility: "PUBLIC",
  };
}
